@using Microsoft.AspNetCore.Identity
@using Instagram.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model PaginatedList<Instagram.Models.Post>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Username
            </th>
            <th>
                Caption
            </th>
            <th>
                ImagePath
            </th>
            <th>
                Time
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.ID">@Html.DisplayFor(modelItem => item.User.UserName)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Caption)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImagePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostTime)
            </td>
            @if (SignInManager.IsSignedIn(User))
            {
                @if (UserManager.GetUserId(User).Equals(item.UserID))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                }
                else
                {
                    <td>
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                    </td>
                }
            }
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
