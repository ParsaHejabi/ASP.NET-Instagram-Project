@using Microsoft.AspNetCore.Identity
@using Instagram.Models
@model Instagram.Models.Post
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserID)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Caption)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Caption)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-10">
            @*@Html.DisplayFor(model => model.Image)*@
            <img src="@Url.Action("ViewPostImage", new { id = Model.ID})" />
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostLikes)
        </dt>
        <dd class="col-sm-10">
            @if (Model.PostLikes.Count != 0)
            {
                <table class="table">
                    <tr>
                        <th>User</th>
                    </tr>
                    @foreach (var item in Model.PostLikes)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.User.UserName)
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                @:No Likes
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Comments)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Comments.Count != 0)
            {
                <table class="table">
                    <tr>
                        <th>User</th>
                        <th>Content</th>
                        <th>Time</th>
                        <th>Likes Count</th>
                    </tr>
                    @foreach (var item in Model.Comments)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.User.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Content)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CommentTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CommentLikes.Count)
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                @:No Comments
            }
        </dd>
    </dl>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.GetUserName(User).Equals(Model.User.UserName))
        {
            <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> @:|
        }
    }
    <a asp-action="Index">Back to List</a> |
    <a asp-action="Like" asp-route-id="@Model.ID">Like</a> |
    <a asp-controller="Comments" asp-action="Create" asp-route-id="@Model.ID">Comment</a>
</div>
